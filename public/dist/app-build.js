System.register("app.html!github:systemjs/plugin-text@0.0.8.js",[],function(a,b){"use strict";return{setters:[],execute:function(){a("default",'<template><require from="nav-bar.html"></require><require from="bootstrap/css/bootstrap.css"></require><nav-bar router.bind="router"></nav-bar><div class="page-host"><router-view></router-view></div></template>')}}}),System.register("app.js",[],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d;return{setters:[],execute:function(){a("App",d=function(){function a(){c(this,a)}return a.prototype.configureRouter=function(a,b){a.title="Aurelia",a.map([{route:["","blog-viewedit"],name:"blog-viewedit",moduleId:"blog-viewedit",nav:!0,title:"View / Edit Blog"},{route:"blog-post",name:"blog-post",moduleId:"blog-post",nav:!0,title:"New Blog Post"}]),this.router=b},a}()),a("App",d)}}}),System.register("blog-post.html!github:systemjs/plugin-text@0.0.8.js",[],function(a,b){"use strict";return{setters:[],execute:function(){a("default",'<template><div class="container"><h2>POST A BLOG POST</h2><div class="form-group"><form role="form" submit.delegate="postData()"><label for="userID">User ID</label><input type="text" value.bind="myPostData.userId" class="form-control" id="userID" placeholder="1"><label for="postTitle">Post Title</label><input type="text" value.bind="myPostData.title" class="form-control" id="postTitle" placeholder="Post Title"><label for="postBody">Post Body</label><input type="text" value.bind="myPostData.body" class="form-control" id="postBody" placeholder="Post Body"> <button type="submit">Submit New Post</button></form></div><div if.bind="newPost"><p>Post #${myPostData.id} submitted by user ${myPostData.userId}.</p><!-- <h3>User ID</h3>\n      <p>${myPostData.userId}</p>\n      <h3>Title</h3>\n      <p>${myPostData.title}</p>\n      <h3>Body</h3>\n      <p>${myPostData.body}</p> --></div><hr><!-- <button click.delegate="updateData()">PUT</button>\n    <button click.delegate="deleteData()">DEL</button> --></div></template>')}}}),System.register("blog-viewedit.html!github:systemjs/plugin-text@0.0.8.js",[],function(a,b){"use strict";return{setters:[],execute:function(){a("default",'<template><div class="container"><h2>VIEW / EDIT BLOG POST</h2><div class="form-group"><form role="form" submit.delegate="getData()"><label for="un">User ID</label><input type="text" value.bind="blogPost.userId" class="form-control" id="un" placeholder="1-10"><label for="pn">Post Number</label><input type="text" value.bind="blogPost.id" class="form-control" id="pn" placeholder="1-100"> <button type="submit">View Post</button></form></div><div if.bind="blogPost.title"><h3>Title</h3><div><span class="pre-edit-border" contenteditable textcontent.bind="blogPost.title"></span><!-- <p>Click ^ to edit</p> --></div><!-- <label for="bpTitle">${blogPost.title & oneTime}</label> - <a id="editbpTitle" href="#">Edit</a><br>\n      <input type="text" value.bind="blogPost.title" class="form-control" id="bpTitle" placeholder="blogPost.title" size="80"> --><h3>Body</h3><!-- <label for="bpBody">${blogPost.body & oneTime}</label> - <a id="editbpBody" href="#">Edit</a><br> --><!-- <input type="text" value.bind="blogPost.body" class="form-control" id="bpBody" placeholder="blogPost.body"> --><div><span class="pre-edit-border" contenteditable textcontent.bind="blogPost.body"></span><!-- <p>Click ^ to edit</p> --></div><!-- <p>${blogPost.body}</p> --><br><button class="btn btn-default" click.delegate="updateData()">Update Blog Post</button><p if.bind="editPostSuccess">Post #${blogPost.id} by user #${blogPost.userId} successfully updated.</p></div></div></template>')}}}),System.register("blog-post.js",["fetch","aurelia-fetch-client"],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d,e,f,g;return{setters:[function(a){},function(a){d=a.HttpClient,e=a.json}],execute:function(){f=new d,a("BlogPost",g=function(){function a(){c(this,a),this.blogPost={},this.newPost=null,this.editPostSuccess=null,this.myPostData={}}return a.prototype.getData=function(){var a=this;this.blogPost.id=pn.value||1,this.blogPost.userId=un.value||1,f.fetch("http://jsonplaceholder.typicode.com/posts/"+this.blogPost.id).then(function(a){if(200!==a.status)throw alert("Post not found."),new Error(a.statusText);return a.json()}).then(function(b){console.log("data: ",b),a.blogPost=b}).catch(function(a){console.log(a)})},a.prototype.postData=function(){var a=this;this.myPostData.userId=userID.value||"1",this.myPostData.title=postTitle.value||"title",this.myPostData.body=postBody.value||"body",this.myPostData.id=Math.ceil(10*Math.random())+100,f.fetch("http://jsonplaceholder.typicode.com/posts",{method:"POST",body:e(this.myPostData)}).then(function(a){return a.json()}).then(function(b){console.log(b),a.newPost=!0})},a.prototype.updateData=function(){var a=this;f.fetch("http://jsonplaceholder.typicode.com/posts/"+this.blogPost.id,{method:"PUT",body:e(this.blogPost)}).then(function(a){return a.json()}).then(function(b){console.log(b),a.editPostSuccess=!0})},a.prototype.deleteData=function(){f.fetch("http://jsonplaceholder.typicode.com/posts/1",{method:"DELETE"}).then(function(a){return a.json()}).then(function(a){console.log(a)})},a}()),a("BlogPost",g)}}}),System.register("blog-viewedit.js",["aurelia-framework","./blog-post"],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function d(a,b){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!b||"object"!=typeof b&&"function"!=typeof b?a:b}function e(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function, not "+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}var f,g,h,i,j;return{setters:[function(a){f=a.inject},function(a){g=a.BlogPost}],execute:function(){a("BlogViewedit",(h=f(g),j=h(i=function(a){function b(){c(this,b);for(var e=arguments.length,f=Array(e),g=0;g<e;g++)f[g]=arguments[g];return d(this,a.call.apply(a,[this].concat(f)))}return e(b,a),b}(g))||i)),a("BlogViewedit",j)}}}),System.register("main.js",["bootstrap"],function(a,b){"use strict";function c(a){a.use.standardConfiguration().developmentLogging(),a.start().then(function(){return a.setRoot()})}return a("configure",c),{setters:[function(a){}],execute:function(){}}}),System.register("nav-bar.html!github:systemjs/plugin-text@0.0.8.js",[],function(a,b){"use strict";return{setters:[],execute:function(){a("default",'<template bindable="router"><nav class="navbar navbar-default navbar-fixed-top" role="navigation"><div class="navbar-header"><button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#skeleton-navigation-navbar-collapse"><span class="sr-only">Toggle Navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span></button> <a class="navbar-brand" href="#"><i class="fa fa-home"></i> <span>${router.title}</span></a></div><div class="collapse navbar-collapse" id="skeleton-navigation-navbar-collapse"><ul class="nav navbar-nav"><li repeat.for="row of router.navigation" class="${row.isActive ? \'active\' : \'\'}"><a data-toggle="collapse" data-target="#skeleton-navigation-navbar-collapse.in" href.bind="row.href">${row.title}</a></li></ul><ul class="nav navbar-nav navbar-right"><li class="loader" if.bind="router.isNavigating"><i class="fa fa-spinner fa-spin fa-2x"></i></li></ul></div></nav></template>')}}});